#! /usr/bin/env python2

import os
#import shutil
from sh import git
from sh import cd
from sh import ccli
from string import Template

#------------------------------------------------------------------------------#
# Notes:
#------------------------------------------------------------------------------#

# This needs to become a command-line argument
project = "test"
project_dir = os.getcwd() + "/" + project
app_dir = "app"
_verbose = False

#------------------------------------------------------------------------------#
# Repositories
#------------------------------------------------------------------------------#

cinch_root = "git@gitlab.lanl.gov:ngc-utils/cinch.git"

#------------------------------------------------------------------------------#
# Context manager
#------------------------------------------------------------------------------#

class cd:
    """Context manager for changing the current working directory"""
    def __init__(self, newPath):
        self.newPath = os.path.expanduser(newPath)

    def __enter__(self):
        self.savedPath = os.getcwd()
        os.chdir(self.newPath)

    def __exit__(self, etype, value, traceback):
        os.chdir(self.savedPath)

#------------------------------------------------------------------------------#
# Cinch project.cmake template
#------------------------------------------------------------------------------#

config_project = Template(
"""
#~----------------------------------------------------------------------------~#
# Copyright (c) 2014 Los Alamos National Security, LLC
# All rights reserved.
#~----------------------------------------------------------------------------~#

project(${PROJECT_NAME})

#------------------------------------------------------------------------------#
# Set application directory
#------------------------------------------------------------------------------#

cinch_add_application_directory("${APPLICATION_DIRECTORY}")

#------------------------------------------------------------------------------#
# Add library targets
#------------------------------------------------------------------------------#

cinch_add_library_target("${LIBRARY_TARGET}" "${LIBRARY_TARGET_DIR}")

#~---------------------------------------------------------------------------~-#
# Formatting options for emacs and vim.
# vim: set tabstop=4 shiftwidth=4 expandtab :
#~---------------------------------------------------------------------------~-#
"""
)

#------------------------------------------------------------------------------#
# Cinch documentation.cmake template
#------------------------------------------------------------------------------#

config_documentation = Template(
"""
#~----------------------------------------------------------------------------~#
# Copyright (c) 2014 Los Alamos National Security, LLC
# All rights reserved.
#~----------------------------------------------------------------------------~#

#~---------------------------------------------------------------------------~-#
# Formatting options for emacs and vim.
# vim: set tabstop=4 shiftwidth=4 expandtab :
#~---------------------------------------------------------------------------~-#
"""
)

#------------------------------------------------------------------------------#
# Cinch packages.cmake template
#------------------------------------------------------------------------------#

config_packages = Template(
"""
#~----------------------------------------------------------------------------~#
# Copyright (c) 2014 Los Alamos National Security, LLC
# All rights reserved.
#~----------------------------------------------------------------------------~#

#~---------------------------------------------------------------------------~-#
# Formatting options for emacs and vim.
# vim: set tabstop=4 shiftwidth=4 expandtab :
#~---------------------------------------------------------------------------~-#
"""
)

#------------------------------------------------------------------------------#
# CMakeLists.txt example template
#------------------------------------------------------------------------------#

example_cmakelists = \
"""
#~----------------------------------------------------------------------------~#
# Copyright (c) 2014 Los Alamos National Security, LLC
# All rights reserved.
#~----------------------------------------------------------------------------~#

# Add header files
set(example_src_HEADERS
  Example.h
  PARENT_SCOPE
)

# Add source files
set(example_src_SOURCES
  Example.cc
  PARENT_SCOPE
)

# Add unit test
if(ENABLE_UNIT_TESTS)
  cinch_add_unit(example_unit example_unit.cc)
endif(ENABLE_UNIT_TESTS)

#~---------------------------------------------------------------------------~-#
# Formatting options for vim.
# vim: set tabstop=2 shiftwidth=2 expandtab :
#~---------------------------------------------------------------------------~-#
"""

#------------------------------------------------------------------------------#
# CMakeLists.txt application template
#------------------------------------------------------------------------------#

app_cmakelists = \
"""
#~----------------------------------------------------------------------------~#
# Copyright (c) 2014 Los Alamos National Security, LLC
# All rights reserved.
#~----------------------------------------------------------------------------~#

#------------------------------------------------------------------------------#
# Add a rule to build the executable
#------------------------------------------------------------------------------#

add_executable(myapp app.cc)

#------------------------------------------------------------------------------#
# Add link dependencies
#------------------------------------------------------------------------------#

target_link_libraries(myapp ${CINCH_LIBRARY_TARGET} ${EXTRA_LIBS})

#~---------------------------------------------------------------------------~-#
# Formatting options for emacs and vim.
# vim: set tabstop=4 shiftwidth=4 expandtab :
#~---------------------------------------------------------------------------~-#
"""

#------------------------------------------------------------------------------#
# Dummy application source
#------------------------------------------------------------------------------#

app_source = \
"""
/*~-------------------------------------------------------------------------~~*
 *~-------------------------------------------------------------------------~~*/

#include <iostream>

int main(int argc, char ** argv) {
    std::cerr << "Hello World" << std::endl;

    return 0;
} // main
/*~------------------------------------------------------------------------~--*
 *~------------------------------------------------------------------------~--*/
"""


#------------------------------------------------------------------------------#
# Define verbose function
#------------------------------------------------------------------------------#

def verbose(command):
  if _verbose:
    print(command)
  else:
    command

#------------------------------------------------------------------------------#
# Begin main
#------------------------------------------------------------------------------#

if not os.path.isdir(project_dir):
    os.makedirs(project_dir)

with cd(project_dir):

    # Initialize the new repository
    git.init()

    # Add the cinch submodule
    git.submodule.add(cinch_root)
    git.submodule.foreach("--recursive", \
        "git submodule init; git submodule update")

    # Create directory structure
    os.makedirs("config")
    os.makedirs("doc")
    os.makedirs("src")
    os.makedirs("src/example_src")
    os.makedirs(app_dir)

    # Create links into cinch
    os.symlink("cinch/cmake/ProjectLists.txt", "CMakeLists.txt")
    with cd("src"):
        os.symlink("../cinch/cmake/SourceLists.txt", "CMakeLists.txt")

    # Create example sources
    with cd("src/example_src"):
        with open("CMakeLists.txt", 'w') as fd:
            fd.write(example_cmakelists[1:-1])

        ccli.cxx("-c", "-n mylib::example_src", "example")
        ccli.unit("example_unit", "example1")

    # Populate config directory
    with cd("config"):

        # Project settings
        with open("project.cmake", 'w') as fd:
            project_cmake = config_project.substitute(
                PROJECT_NAME="myproject",
                APPLICATION_DIRECTORY=app_dir,
                LIBRARY_TARGET="mylib",
                LIBRARY_TARGET_DIR="src/mylib",
            )
            fd.write(project_cmake[1:-1])

        # Documentation settings
        with open("documentation.cmake", 'w') as fd:
            documentation_cmake = config_documentation.substitute(
                PROJECT_NAME="myproject"
            )
            fd.write(documentation_cmake[1:-1])

        # Dependency settings
        with open("packages.cmake", 'w') as fd:
            packages_cmake = config_packages.substitute(
                PROJECT_NAME="myproject"
            )
            fd.write(packages_cmake[1:-1])

    # Create application list file
    with cd(app_dir):
        with open("CMakeLists.txt", 'w') as fd:
            fd.write(app_cmakelists[1:-1])

        with open("app.cc", 'w') as fd:
            fd.write(app_source[1:-1])
            

#------------------------------------------------------------------------------#
# vim: set tabstop=4 shiftwidth=4 expandtab:
#------------------------------------------------------------------------------#
