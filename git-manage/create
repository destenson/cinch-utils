#! /usr/bin/env python2

import os
#import shutil
from sh import git
from sh import cd
from sh import ccli
from string import Template

#------------------------------------------------------------------------------#
# Notes:
#------------------------------------------------------------------------------#

# This needs to become a command-line argument
project = "test"
project_dir = os.getcwd() + "/" + project
app_dir = "app"
_verbose = False

#------------------------------------------------------------------------------#
# Repositories
#------------------------------------------------------------------------------#

cinch_root = "git@gitlab.lanl.gov:ngc-utils/cinch.git"

#------------------------------------------------------------------------------#
# Context manager
#------------------------------------------------------------------------------#

class cd:
    """Context manager for changing the current working directory"""
    def __init__(self, newPath):
        self.newPath = os.path.expanduser(newPath)

    def __enter__(self):
        self.savedPath = os.getcwd()
        os.chdir(self.newPath)

    def __exit__(self, etype, value, traceback):
        os.chdir(self.savedPath)

#------------------------------------------------------------------------------#
# CMakeLists.txt example template
#------------------------------------------------------------------------------#

exmaple_cmakelists = \
"""
#~----------------------------------------------------------------------------~#
# Copyright (c) 2014 Los Alamos National Security, LLC
# All rights reserved.
#~----------------------------------------------------------------------------~#

# Add header files
set(example_src_HEADERS
  Example.h
  PARENT_SCOPE
)

# Add source files
set(example_src_SOURCES
  Example.cc
  PARENT_SCOPE
)

# Add unit test
if(ENABLE_UNIT_TESTS)
  cinch_add_unit(example_unit example_unit.cc)
endif(ENABLE_UNIT_TESTS)

#~---------------------------------------------------------------------------~-#
# Formatting options for vim.
# vim: set tabstop=2 shiftwidth=2 expandtab :
#~---------------------------------------------------------------------------~-#
"""

#------------------------------------------------------------------------------#
# Define verbose function
#------------------------------------------------------------------------------#

def verbose(command):
  if _verbose:
    print(command)
  else:
    command

#------------------------------------------------------------------------------#
# Begin main
#------------------------------------------------------------------------------#

if not os.path.isdir(project_dir):
    os.makedirs(project_dir)

with cd(project_dir):

    # Initialize the new repository
    git.init()

    # Add the cinch submodule
    git.submodule.add(cinch_root)
    git.submodule.foreach("--recursive", \
        "git submodule init; git submodule update")

    # Create directory structure
    os.makedirs("config")
    os.makedirs("doc")
    os.makedirs("src")
    os.makedirs("src/example_src")
    os.makedirs(app_dir)

    # Create links into cinch
    os.symlink("cinch/cmake/ProjectLists.txt", "CMakeLists.txt")
    with cd("src"):
        os.symlink("../cinch/cmake/SourceLists.txt", "CMakeLists.txt")

    # Create example sources
    with cd("src/example_src"):
        with open("CMakeLists.txt", 'w') as fd:
            fd.write(exmaple_cmakelists[1:-1])

        ccli.cxx("-c", "Example")
        

#------------------------------------------------------------------------------#
# vim: set tabstop=4 shiftwidth=4 expandtab:
#------------------------------------------------------------------------------#
