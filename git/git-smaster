#! /usr/bin/env bash
#------------------------------------------------------------------------------#
# git script to recursively clone project.
#------------------------------------------------------------------------------#

# source function definitions
script_dir="$(dirname "$0")"
. "${script_dir}/cinch-functions"

# create description
declare -a msg=(
    ""
    " Cinch-Utils Script"
    "   git-sclone"
    ""
    " Intent:"
    "   Recursive clone of a git project that contains submodules."
    ""
    " Operations:"
    "   git clone --recursive"
    "   git submodule foreach --recursive \""
    "       git checkout master"
    "   \""
)

# print warning banner with description
print_banner $msg

# Clone the project
git clone --recursive $@


# Parse off the name of the project
project=`echo $1 | perl -ne 'm,([^/:]+)\.git$, && print "$1\n"'`

# Check if the user has specified a project name
if [[ -n "$2" ]] ; then
    project=$2
fi

# Checkout master in each submodule.  The default behavior leaves
# the submodules headless, which can be disturbing to the average user...
cd $project && git submodule foreach --recursive '
    branch=`cinch-branch $name`
    git checkout $branch
';

# vim: set tabstop=4 shiftwidth=4 expandtab :
